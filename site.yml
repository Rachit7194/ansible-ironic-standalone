---
- hosts: all
  sudo: true
  roles:
    - role: mysql
      mysql_database_list:
        - name: "ironic"
      mysql_user_list:
        - name: "ironic"
          password: "mysql"
          priv: "ironic.*:ALL"

    - role: rabbitmq
      rabbitmq_vhost_definition_list:
        - name: "ironic"
      rabbitmq_users_definition_list:
        - user: "ironic"
          password: "rabbitmq"
          vhost: "ironic"
          tags: 
            - "administrator"
            - "management"

    - role: ironic
      ironic_debug: true
      ironic_my_ip: "{{ ansible_eth0.ipv4.address }}"
      ironic_conductor_api_url: "http://{{ ironic_my_ip }}:6385/"
      ironic_pxe_tftp_server: "{{ ansible_eth1.ipv4.address }}"
      ironic_oslo_messaging_rabbit_host: "localhost"
      ironic_oslo_messaging_rabbit_userid: "ironic"
      ironic_oslo_messaging_rabbit_password: "rabbitmq"
      ironic_oslo_messaging_rabbit_virtual_host: "ironic"
      ironic_database_mysql_host: "localhost"
      ironic_database_mysql_userid: "ironic"
      ironic_database_mysql_password: "mysql"
      ironic_database_mysql_db: "ironic"
      ironic_enabled_drivers: 
        - "pxe_ipmitool"
        - "agent_ipmitool"
      
    - role: dnsmasq
      dnsmasq_conf_domain: "pxe.local"
      dnsmasq_conf_dhcp:
        eth1:
          range: [10.0.0.100, 10.0.0.200, infinite]
          ignore_names: true
          generate_names: true
          option:
            - "option:router,10.0.0.1"
            - "option:ntp-server,0.0.0.0"
            - "option:dns-server,8.8.8.8"  
          boot: ["{{ ironic_pxe_bootfile_name }}"]
          tftp: "{{ ironic_pxe_tftp_root }}"

    - role: nginx
      nginx_server_list:
        - name: "image-server"
          root: "{{ ironic_pxe_images_path }}"
          access_log: "/var/log/nginx/ironic-image-server_access.log"
          location_list:
            - name: "/"
              autoindex: "on"

    - role: monit
      monit_monitoring_list:
        - name: mysql
          type: process
          target: "{{ mysql_pidfile }}"
          start:
            script: "/etc/init.d/mysql start"
            timeout: 60
          stop: 
            script: "/etc/init.d/mysql stop"
        - name: rabbitmq
          type: process
          target: "{{ rabbitmq_pidfile }}"
          start: 
            script: "/etc/init.d/rabbitmq-server start"
          stop:
            script: "/etc/init.d/rabbitmq-server stop"
        - name: dnsmasq
          type: process
          target: "{{ dnsmasq_pidfile }}"
          start:
            script: "/etc/init.d/dnsmasq start"
          stop:
            script: "/etc/init.d/dnsmasq stop"
        - name: ironic-api
          type: process
          target: "{{ ironic_api_pidfile }}"
          start:
            script: "service start ironic-api"
          stop:
            script: "service stop ironic-api"
        - name: ironic-conductor
          type: process
          target: "{{ ironic_conductor_pidfile }}"
          start: 
            script: "service start ironic-conductor"
          stop: 
            script: "service stop ironic-conductor"
        - name: nginx
          type: process
          target: "{{ nginx_pidfile }}"
          start:
            script: "/etc/init.d/nginx start"
          stop:
            script: "/etc/init.d/nginx stop"

  tasks:
    - name: Download IPA Coreos ramdisk
      get_url:
        url: http://tarballs.openstack.org/ironic-python-agent/coreos/files/coreos_production_pxe_image-oem.cpio.gz
        dest: "{{ ironic_pxe_images_path }}/coreos_production_pxe_image-oem.cpio.gz"
        force: no

    - name: Download IPA Coreos kernel
      get_url:
        url: http://tarballs.openstack.org/ironic-python-agent/coreos/files/coreos_production_pxe.vmlinuz
        dest: "{{ ironic_pxe_images_path }}/coreos_production_pxe.vmlinuz"
        force: no
  
#   - name: Display all variables/facts known for a host
#     debug: var=hostvars[inventory_hostname]

