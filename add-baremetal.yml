---
- name: Define and deploy physical servers using Ironic
  hosts: provisioning
  sudo: true
  gather_facts: False
  vars_files:
    - vars/baremetal.yml
  vars:
      configdrive_os_family: "{{ baremetal_image_type }}"
      configdrive_uuid: "{{ baremetal_uuid }}"
      configdrive_fqdn: "{{ baremetal_name }}.{{ baremetal_domain }}"
      configdrive_name: "{{ baremetal_name }}"
      configdrive_config_dir: "{{ baremetal_configdrive_dir }}"
      configdrive_volume_path: "{{ baremetal_configdrive_dir }}"
      configdrive_network_device_list: "{{ baremetal_network_device_list }}"
      configdrive_ssh_public_key: "{{ baremetal_ssh_key }}"
      configdrive_meta:
        deploy_date: "{{ baremetal_datetime }}"
        deploy_host: "{{ inventory_hostname }}"
        deploy_user: "{{ ansible_ssh_user }}"


  vars_prompt:
    - name: "baremetal_ipmi_ip"
      prompt: "Server IPMI hostname or IP?"
      private: no
    - name: "baremetal_ipmi_user"
      prompt: "IPMI user?"
      default: "ADMIN"
      private: no
    - name: "baremetal_ipmi_pass"
      prompt: "IPMI password?"
      default: "ADMIN"
      private: no
    - name: "baremetal_mac"
      prompt: "Server PXE MAC address?"
      private: no
    - name: "baremetal_network"
      prompt: "Main network? (optional, default=pxe)"
      private: no
    - name: "baremetal_fqdn"
      prompt: "Server FQDN hostname? (optional, default=MAC)"
      private: no
    - name: "baremetal_ip"
      prompt: "Server IP address CIDR? (optional, default=dhcp)"
      private: no
    - name: "baremetal_os"
      prompt: "Image to deploy?"
      default: "trusty"
      private: no

  pre_tasks:
    - name: Include image definitions
      include_vars: "vars/baremetal_image-{{ baremetal_os }}.yml"

    - name: Include network definitions
      include_vars: "vars/baremetal_network-{{ baremetal_network }}.yml"
      when: baremetal_network is defined and baremetal_network|trim != ''
    
    - include: tasks/baremetal_md5.yml
      when: >
        baremetal_image_checksum is not defined or 
        baremetal_image_checksum is none

    - include: tasks/baremetal_prepare.yml
    
    - name: Check if the new node was defined
      shell: >
        ironic
        --os-auth-token="{{ baremetal_ironic_token }}"
        --ironic-url="{{ baremetal_ironic_url }}"
        node-list | awk -F '|' "/{{ baremetal_name }}/ { print \$2 }"
      register: __baremetal_new
      ignore_errors: yes
      delegate_to: "{{ groups.client[0] }}"

    - name: Checking if server name is already used
      fail: msg="Server name '{{ baremetal_name }}' already defined!"
      when: __baremetal_new.stdout|trim != ''

    - name: Define the new baremetal node
      shell: >
        ironic
        --os-auth-token="{{ baremetal_ironic_token }}"
        --ironic-url="{{ baremetal_ironic_url }}"
        node-create -n "{{ baremetal_name }}" -d "{{ baremetal_driver }}"
        -i ipmi_address="{{ baremetal_ipmi_ip }}"
        -i ipmi_username="{{ baremetal_ipmi_user }}"
        -i ipmi_password="{{ baremetal_ipmi_pass }}"
        -i deploy_kernel="{{ baremetal_deploy_kernel }}"
        -i deploy_ramdisk="{{ baremetal_deploy_ramdisk }}"
        | awk "/ uuid / { print \$4 }"
      register: __baremetal_defined
      delegate_to: "{{ groups.client[0] }}"

    - name: Get the server UUID
      set_fact: baremetal_uuid="{{ __baremetal_defined.stdout }}"
      when: __baremetal_defined|success


  roles:
    - role: configdrive
      when: baremetal_configdrive


  tasks:
    - name: Define the install image for the node
      command: > 
        ironic 
        --os-auth-token="{{ baremetal_ironic_token }}" 
        --ironic-url="{{ baremetal_ironic_url }}"
        node-update "{{ baremetal_uuid }}" add
            instance_info/image_source="{{ baremetal_image }}"
            instance_info/image_checksum="{{ baremetal_image_checksum }}"
            extra/deploy_date="{{ baremetal_datetime }}"
            extra/deploy_host="{{ inventory_hostname }}"
            extra/deploy_user="{{ ansible_ssh_user }}"
      delegate_to: "{{ groups.client[0] }}"
      
    - name: Define the kernel and ramdisk for the image
      command: >
        ironic 
        --os-auth-token="{{ baremetal_ironic_token }}"
        --ironic-url="{{ baremetal_ironic_url }}"
        node-update "{{ baremetal_uuid }}" add
            instance_info/kernel="{{ baremetal_image_kernel }}"
            instance_info/ramdisk="{{ baremetal_image_ramdisk }}"
            instance_info/root_gb="{{ baremetal_image_rootsize }}"
      when: baremetal_image_kernel and baremetal_image_ramdisk
      delegate_to: "{{ groups.client[0] }}"

    - name: Create the MAC address ports for the new node
      command: > 
        ironic 
        --os-auth-token="{{ baremetal_ironic_token }}"
        --ironic-url="{{ baremetal_ironic_url }}"
        port-create -n "{{ baremetal_uuid }}" -a "{{ baremetal_mac }}"
      when: baremetal_mac is defined and baremetal_mac
      delegate_to: "{{ groups.client[0] }}"

    - name: Add reference to config-drive in metadata info
      command: > 
        ironic 
        --os-auth-token="{{ baremetal_ironic_token }}" 
        --ironic-url="{{ baremetal_ironic_url }}"
        node-update "{{ baremetal_uuid }}" add
            extra/configdrive="{{ baremetal_configdrive_base_url }}/{{ baremetal_uuid }}"
      when: >
        baremetal_configdrive_base_url is defined and
        not baremetal_configdrive_base_url is none and
        baremetal_configdrive
      delegate_to: "{{ groups.client[0] }}"

    - name: Define the configdrive parameter
      set_fact: _baremetal_configdrive_param=""
      delegate_to: "{{ groups.client[0] }}"

    - name: Define the configdrive parameter when enabled configdrive
      set_fact: _baremetal_configdrive_param="--config-drive {{ baremetal_configdrive_base_url }}/{{ baremetal_uuid }}.gz"
      when: baremetal_configdrive
      delegate_to: "{{ groups.client[0] }}"

    - name: Active and deploy the server
      command: >
        ironic
        --os-auth-token="{{ baremetal_ironic_token }}"
        --ironic-url="{{ baremetal_ironic_url }}"
        node-set-provision-state {{ _baremetal_configdrive_param }} "{{ baremetal_uuid }}" active
      delegate_to: "{{ groups.client[0] }}"


