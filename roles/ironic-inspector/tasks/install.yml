---
- name: Debian - Import repository key
  apt_key: url="{{ ironic_inspector_os_repo_key }}" state=present
  when: >
    ansible_os_family == 'Debian' and 
    not ironic_inspector_os_packages and
    not ironic_inspector_os_repo_key is none and
    ironic_inspector_os_repo_key | search("http://.*")
  ignore_errors: yes
  tags: ["debian"]

- name: Debian - Add repository package
  apt: name="{{ ironic_inspector_os_repo_key }}" state=latest
  when: >
    ansible_os_family == 'Debian' and 
    not ironic_inspector_os_packages and
    not ironic_inspector_os_repo_key is none and
    not ironic_inspector_os_repo_key | search("http://.*")
  tags: ["debian"]

- name: Debian - Add repository url
  apt_repository: repo="{{ ironic_inspector_os_repo_url }}" state=present
  when: >
    ansible_os_family == 'Debian' 
    and not ironic_inspector_os_packages
  tags: ["debian"]

- name: RedHat - Add repository
  yum: name="{{ ironic_inspector_os_repo_url }}" state=present
  when: >
    ansible_os_family == 'RedHat' and 
    not ironic_inspector_os_packages
  tags: ["redhat"]

- name: RedHat - Import repository key
  rpm_key: key="{{ ironic_inspector_os_repo_key }}" state=present
  when: >
    ansible_os_family == 'RedHat' and 
    not ironic_inspector_os_packages and 
    not ironic_inspector_os_repo_key is none
  tags: ["redhat"]

- name: Check if configuration exists
  stat: path="{{ ironic_inspector_config_file }}"
  register: __ironic_inspector_conf

- name: Setup configuration fact
  set_fact: _ironic_inspector_previous="{{ __ironic_inspector_conf.stat.exists }}"

- name: RedHat - Install Ironic-Inspector required packages
  yum:
    name: "{{ item.key }}{{ '-' + item.version | default('*') }}"
    state: "{{ item.state | default('present') }}"
  with_dict: ironic_inspector_packages
  when: ansible_os_family == 'RedHat'
  register: __ironic_inspector_installed
  tags: ["redhat"]

- name: Debian - Install Ironic-Inspector required packages
  apt: 
    name: "{{ item.key }}{{ '=' + item.version | default('*') }}"
    state: "{{ item.state | default('present') }}"
    install_recommends: "{{ ironic_inspector_packages_install_recommends }}"
  with_dict: ironic_inspector_packages
  when: ansible_os_family == 'Debian'
  register: __ironic_inspector_installed
  tags: ["debian"]

- name: Check if Ironic-Inspector packages were installed
  set_fact: _ironic_inspector_reinstalled="{{ __ironic_inspector_installed.changed }}"

# Because Ubuntu starts ironic daemons as part of the install process, 
# we need to stop it
- name: Stop Ironic-Inspector daemon after initial install
  service:
    name: "{{ ironic_inspector_service_name }}"
    state: stopped
    enabled: no
  ignore_errors: yes
  when: _ironic_inspector_reinstalled

- name: Debian - Delete Ironic-Inspector upstart configuration
  file:
    path: "/etc/init/{{ ironic_inspector_service_name }}.conf"
    state: absent
  when: >
    ansible_os_family == 'Debian' and
    ironic_inspector_init_system != "upstart"
  notify: stop inspector
  tags: ["debian", "ubuntu"]

- name: Debian - Delete Ironic-Inspector init.d configuration
  file:
    path: "/etc/init.d/{{ ironic_inspector_service_name }}"
    state: absent 
  when: >
    ansible_os_family == 'Debian' and
    ironic_inspector_init_system != "initd"
  notify: stop inspector
  tags: ["debian", "ubuntu"]

# Flush all notify stop handlers, to be sure that they are done!
# The reason is because of upstart service
- meta: flush_handlers

