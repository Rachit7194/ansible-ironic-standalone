---
- name: Create folders
  file:
    path: "{{ item }}"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    mode: 0755
    state: directory
  with_items:
    - "{{ nginx_ssl_dir }}"
    - "{{ nginx_sites_dir }}"
    - "{{ nginx_auth_dir }}"
    - "{{ nginx_lib_dir }}"
    - "{{ nginx_lua_dir }}"
    - "{{ nginx_config_dir }}"
    - "{{ nginx_log_dir }}"

- name: Create proxy cache path
  file:
    path: "{{ nginx_proxy_cache_path | first }}"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    mode: 0755
    state: directory
  when: nginx_proxy_cache_path is defined and nginx_proxy_cache_path

- name: Create proxy temp path
  file:
    path: "{{ nginx_proxy_temp_path | first }}"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    mode: 0755
    state: directory
  when: nginx_proxy_temp_path is defined and nginx_proxy_temp_path

- name: Create global nginx configuration
  template:
    src: nginx.conf.j2
    dest: "{{ nginx_config_file }}"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    mode: 0644
    validate: '{{ nginx_daemon }} -t -c %s'
  notify: reload nginx
  register: __nginx_updated_global

# Lua
- name: Copy global init_by_lua file
  copy:
    src: "{{ nginx_lua_init_by_file }}"
    dest: "{{ nginx_lua_dir }}/{{ nginx_lua_init_by_file | basename }}"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    mode: 0644
  when: nginx_lua and nginx_lua_init_by_file is defined and nginx_lua_init_by_file


# SSL
- block:
  - name: Copy SSL certificate
    copy:
      src: "{{ nginx_ssl_certificate }}"
      dest: "{{ nginx_ssl_dir }}/{{ nginx_ssl_certificate | basename }}"
      owner: "{{ nginx_user }}"
      group: "{{ nginx_group }}"
      mode: 0640
    when: nginx_ssl_certificate is defined and nginx_ssl_certificate

  - name: Copy SSL certificate key
    copy:
      src: "{{ nginx_ssl_certificate_key }}"
      dest: "{{ nginx_ssl_dir }}/{{ nginx_ssl_certificate_key | basename }}"
      owner: "{{ nginx_user }}"
      group: "{{ nginx_group }}"
      mode: 0640
    when: nginx_ssl_certificate_key is defined and nginx_ssl_certificate_key

  tags: ["ssl"]


- name: Check if configuration was updated
  set_fact:
    _nginx_updated: "{{ __nginx_updated_global.changed }}"

- name: Ensure nginx is started or stopped as required
  service:
    name: "{{ nginx_daemon }}"
    state: "{{ nginx_enabled | ternary('started', 'stopped') }}"
    enabled: "{{ nginx_enabled_on_startup | ternary('yes', 'no') }}"

