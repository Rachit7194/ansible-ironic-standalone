---
# http://docs.openstack.org/developer/ironic-inspector/

# Enable or disable inspector daemon and pxe configuration
ironic_inspector_enabled: True
ironic_inspector_enabled_on_startup: True

# Install from upstream repos or directly from operating system packages
ironic_inspector_os_packages: False
ironic_inspector_packages_install_recommends: True
# Upgrade the database if older than these seconds
# Time is only valid in Debian, set to 0/False to disable
ironic_inspector_packages_update_cache: 0

# Run ironic-dbsync?
ironic_inspector_run_dbsync: True

ironic_inspector_debug: False
ironic_inspector_trace: False

# Main settings
ironic_inspector_api_url: "http://{{ ansible_default_ipv4.address }}:5050/v1/"
ironic_inspector_listen_address: "0.0.0.0"
ironic_inspector_listen_port: 5050
ironic_inspector_timeout: 3600
# One week to keep the introspection data
ironic_inspector_node_status_keep_time: 604800
ironic_inspector_clean_up_period: 60
ironic_inspector_max_concurrency: 1000
ironic_inspector_introspection_delay: 5
ironic_inspector_log: "/var/log/ironic-inspector/inspector.log"
ironic_inspector_publish_errors: True
ironic_inspector_fatal_deprecations: False
ironic_inspector_watch_log_file: False

# Capabilities
ironic_inspector_capabilities_boot_mode: True

# Define these vars for mysql connection:
#ironic_inspector_database_mysql_host: "localhost"
#ironic_inspector_database_mysql_userid: "inspector"
#ironic_inspector_database_mysql_password: "inspector"
#ironic_inspector_database_mysql_db: "inspector"
# otherwise, these are the defaults:
ironic_inspector_database_connection: "sqlite:///var/lib/ironic-inspector/inspector.db"
ironic_inspector_database_idle_timeout: 600
ironic_inspector_database_pool_size: 10
#ironic_inspector_database_pool_timeout:
ironic_inspector_database_use_db_reconnect: True

# How to contact Ironic API to define the server
ironic_inspector_service_ironic_url: "http://{{ ansible_default_ipv4.address }}:6385/"
ironic_inspector_ironic_os_service_type: "baremetal"
ironic_inspector_ironic_os_endpoint_type: "internalURL"
#ironic_inspector_ironic_domain_name:
#ironic_inspector_ironic_project_name:
#ironic_inspector_ironic_username:
#ironic_inspector_ironic_password:

# Manage the rules defined in the discovery_rules*.yml files
ironic_inspector_discovery_manage_rules: True

# If enabled automatically offer PXE boot to all servers when they boot. If they are not
# managed by Ironic Conductor they will be defined in Ironic in enroll state
# using the selected driver and the following rules will be applied to define
# the rest of the parameters of the node.
ironic_inspector_discovery_enroll: True
# Default token
ironic_inspector_discovery_enroll_token: "token"
ironic_inspector_discovery_enroll_driver: "agent_ipmitool"

# Which MAC addresses to add as ports during introspection. Possible
# values: all (all MAC addresses), active (MAC addresses of NIC with
# IP addresses), pxe (only MAC address of NIC node PXE booted from,
# falls back to "active" if PXE MAC is not supplied by the ramdisk).
ironic_inspector_processing_add_ports: "all"
# Which ports (already present on a node) to keep after introspection.
# Possible values: all (do not delete anything), present (keep ports
# which MACs were present in introspection data), added (keep only
# MACs that we added during introspection).
ironic_inspector_processing_keep_ports: "all"
ironic_inspector_processing_overwrite_existing: True
ironic_inspector_processing_enable_setting_ipmi_credentials: False
#ironic_inspector_processing_default_processing_hooks: ["ramdisk_error", "root_disk_selection", "scheduler", "validate_interfaces", "capabilities", "pci_devices"]
ironic_inspector_processing_default_processing_hooks: ["ramdisk_error", "root_disk_selection", "scheduler", "capabilities", "pci_devices"]
#ironic_inspector_processing_processing_hooks:
ironic_inspector_processing_node_not_found_hook: "enroll"
ironic_inspector_processing_ramdisk_logs_dir: "/var/log/ironic-inspector"
ironic_inspector_processing_always_store_ramdisk_logs: False
ironic_inspector_processing_store_data_location: "inspection"
ironic_inspector_processing_disk_partitioning_spacing: True
ironic_inspector_processing_log_bmc_address: True
ironic_inspector_processing_power_off: True

# Define auth_uri to use keystone authentication, otherwise
# noauth will be assumed
ironic_inspector_keystone_authtoken_auth_uri:
ironic_inspector_keystone_authtoken_region_name: "RegionOne"
ironic_inspector_keystone_authtoken_auth_version: 2
ironic_inspector_keystone_authtoken_delay_auth_decision: False

# Manage FW on the PXE host, disabled
ironic_inspector_firewall_manage: False
ironic_inspector_firewall_interface: "{{ ansible_default_ipv4.interface }}"
ironic_inspector_firewall_update_period: 15
ironic_inspector_firewall_chain: "ironic-inspector"

# If swift_auth_url is not none, it will be used for storing introspection data. 
# otherwise introspection data will not be stored.
#ironic_inspector_swift_auth_url:
#ironic_inspector_swift_domain_name:
#ironic_inspector_swift_project_name:
#ironic_inspector_swift_username:
#ironic_inspector_swift_password:
ironic_inspector_swift_delete_after: 600
ironic_inspector_swift_container: "ironic-inspector"

# CORS: http://docs.openstack.org/developer/oslo.middleware/cors.html
#ironic_inspector_cors_allowed_origin: "*"
#ironic_inspector_cors_allow_credentials: True
#ironic_inspector_cors_expose_headers: ["Content-Type", "Cache-Control", "Content-Language", "Expires", "Last-Modified", "Pragma"]
#ironic_inspector_cors_max_age: 3600
#ironic_inspector_cors_allow_methods: ["GET", "POST", "PUT", "HEAD", "PATCH", "DELETE", "OPTIONS"]
#ironic_inspector_cors_allow_headers: ["X-Auth-Token", "X-OpenStack-Ironic-Inspector-API-Minimum-Version", "X-OpenStack-Ironic-Inspector-API-Maximum-Version", "X-OpenStack-Ironic-Inspector-API-Version"]
# CORS subdomains
#ironic_inspector_cors_domains:
#  localhost:
#     allowed_origin: "http://localhost:8080"
#     allow_credentials: True

# Rules to apply when a new node is discovered
# http://docs.openstack.org/developer/ironic-inspector/http-api.html
# https://github.com/openstack/ironic-inspector/blob/master/doc/source/usage.rst
# Default rules to apply when a new node is defined (enroll)
ironic_inspector_discovery_enroll_deploy: []
# Define the IPMI seetings for the new nodes
ironic_inspector_discovery_enroll_ipmi: []
# Define your additional discovery rules
ironic_inspector_discovery_enroll_rules: []
# Define rules to be deleted (by uuid or by description)
ironic_inspector_discovery_enroll_rules_delete: []
# Folder with vars files defining the previous variables to load
# by ansible
ironic_inspector_discovery_enroll_dir: "vars/inspector"

