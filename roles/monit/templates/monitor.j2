# {{ ansible_managed }}

{% if item.type == 'process' %}
check process {{ item.name }} with pidfile {{ item.target }}
{% if item.start is defined and not item.start is none %}
  start program = "{{ item.start.script }}"
{% if item.start.uid is defined %}
    as uid "{{ item.start.uid }}"
{% endif %}
{% if item.start.gid is defined %}
    as gid "{{ item.start.gid }}"
{% endif %}
{% if item.start.timeout is defined %}
    with timeout {{ item.start.timeout }} seconds
{% endif %}
{% endif %}
{% if item.stop is defined and not item.stop is none %}
  stop program = "{{ item.stop.script }}"
{% if item.stop.uid is defined %}
    as uid "{{ item.stop.uid }}"
{% endif %}
{% if item.stop.gid is defined %}
    as gid "{{ item.stop.gid }}"
{% endif %}
{% if item.stop.timeout is defined %}
    with timeout {{ item.stop.timeout }} seconds
{% endif %}
{% endif %}
{% if item.restart is defined and not item.restart is none %}
  restart program = "{{ item.restart.script }}"
{% if item.restart.uid is defined %}
    as uid "{{ item.restart.uid }}"
{% endif %}
{% if item.restart.gid is defined %}
    as gid "{{ item.restart.gid }}"
{% endif %}
{% if item.restart.timeout is defined %}
    with timeout {{ item.restart.timeout }} seconds
{% endif %}
{% endif %}
{% elif item.type == 'system' %}
check system {{ monit_monitor.name }}
{% elif item.type == 'host' %}
check host {{ item.name }} with address {{ item.target }}
{% elif monit_monitor.type == 'filesystem' %}
check filesystem {{ item.name }} with path {{ item.target }}
{% endif %}
{% if item.rules is defined and item.rules %}
{% for rule in item.rules %}
  {{ rule }}
{% endfor %}
{% endif %}

