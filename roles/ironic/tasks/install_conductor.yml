---
- name: RedHat - Install Ironic-Conductor required packages
  yum:
    name: "{{ item.key if ('version' not in item.value) else ('%s-%s' % (item.key, item.value['version'])) }}"
    state: "{{ item.value.state | default('present') }}"
  with_dict: "{{ ironic_conductor_packages }}"
  when: ansible_os_family == 'RedHat'
  register: __ironic_conductor_installed_rh
  tags: ["redhat", "packages"]

- name: Debian - Install Ironic-Conductor required packages
  apt: 
    name: "{{ item.key if ('version' not in item.value) else ('%s=%s' % (item.key, item.value['version'])) }}"
    state: "{{ item.value.state | default('present') }}"
    install_recommends: "{{ ironic_packages_install_recommends }}"
  with_dict: "{{ ironic_conductor_packages }}"
  when: ansible_os_family == 'Debian'
  register: __ironic_conductor_installed_debian
  tags: ["debian", "packages"]

- name: Check if packages were installed
  set_fact: _ironic_conductor_reinstalled="{{ __ironic_conductor_installed_rh.changed or __ironic_conductor_installed_debian.changed }}"

- name: RedHat - Install Ironic-Conductor auxiliary packages
  yum:
    name: "{{ item.key if ('version' not in item.value) else ('%s-%s' % (item.key, item.value['version'])) }}"
    state: "{{ item.value.state | default('present') }}"
  with_dict: "{{ ironic_conductor_packages_aux }}"
  when: ansible_os_family == 'RedHat'
  tags: ["redhat", "aux", "packages"]

- name: Debian - Install Ironic-Conductor auxiliary packages
  apt: 
    name: "{{ item.key if ('version' not in item.value) else ('%s=%s' % (item.key, item.value['version'])) }}"
    state: "{{ item.value.state | default('present') }}"
    install_recommends: "{{ ironic_packages_install_recommends }}"
  with_dict: "{{ ironic_conductor_packages_aux }}"
  when: ansible_os_family == 'Debian'
  tags: ["debian", "aux", "packages"]

# Because Ubuntu starts ironic daemons as part of the install process, 
# we need to stop it
- name: Stop Ironic-Conductor daemon after initial install
  service: name="{{ ironic_conductor_service_name }}" state=stopped enabled=no
  ignore_errors: yes
  when: _ironic_conductor_reinstalled

- name: Create pid folder
  file:
    path: "{{ ironic_conductor_pidfile | dirname }}"
    owner: "{{ ironic_user }}"
    group: "{{ ironic_group }}"
    mode: 0755
    state: directory


- block:
  - name: Create custom systemd folder configuration
    file:
      path: "/etc/systemd/system/{{ ironic_conductor_service_name }}.service.d"
      state: directory
      mode: 0755

  - name: Define custom systemd properties
    template:
      src: systemd-conductor.conf.j2
      dest: "/etc/systemd/system/{{ ironic_conductor_service_name }}.service.d/service.conf"
      mode: 0644
    register: __ironic_conductor_systemd

  - name: Delete upstart configuration
    file: path="/etc/init/{{ ironic_conductor_service_name }}.conf" state=absent

  - name: Reload systemd
    command: systemctl daemon-reload
    when: __ironic_conductor_systemd|changed
  
  when: ironic_init_system == 'systemd'
  tags: ["systemd", "init"]

