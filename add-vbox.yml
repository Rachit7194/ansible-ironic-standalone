---

# This is just an example using command module, a better way will
# be available in ansible 2.0 will be easy with the cloud modules
# http://docs.ansible.com/ansible/os_ironic_module.html

- name: Define and deploy physical servers using Ironic
  hosts: ironic
  become: True
  gather_facts: True
  vars_files:
    - vars/vbox.yml
  vars:
      baremetal_client: "{{ groups.client[0] }}"
      configdrive_os_family: "{{ baremetal_image_type }}"
      configdrive_uuid: "{{ baremetal_uuid }}"
      configdrive_fqdn: "{{ baremetal_name }}.{{ baremetal_domain }}"
      configdrive_name: "{{ baremetal_name }}"
      configdrive_config_dir: "{{ baremetal_server_configdrive_path }}"
      configdrive_volume_path: "{{ baremetal_server_configdrive_path }}"
      configdrive_network_device_list: "{{ baremetal_network_device_list }}"
      configdrive_ssh_public_key: "{{ baremetal_ssh_key }}"
      configdrive_meta:
        deploy_date: "{{ baremetal_datetime }}"
        deploy_host: "{{ inventory_hostname }}"

  vars_prompt:
    - name: "id"
      prompt: "Server Name"
      private: no
    - name: "deploy"
      prompt: "Deploy or Define the server (deploy, define)"
      private: no
      default: "deploy"

  pre_tasks:
    - name: Include network definitions
      include_vars: "servers/{{ id }}.yml"

    - name: Include image definitions
      include_vars: "images/{{ baremetal_os }}.yml"
    
    - include: tasks/baremetal_md5.yml
      when: >
        baremetal_image_checksum is not defined or 
        baremetal_image_checksum is none

    - name: Check if servername configdrive exists
      local_action: stat path="servers/{{ id }}.cloudconfig"
      register: _configdrive_config_user_data_path
      when: >
        baremetal_configdrive and
        (configdrive_config_user_data_path is not defined or not _configdrive_config_user_data_path.stat.exists)

    - name: Load servername configdrive
      set_fact: configdrive_config_user_data_path="{{ _configdrive_config_user_data_path.stat.path }}"
      when: >
        baremetal_configdrive and
        _configdrive_config_user_data_path.stat.exists

    - include: tasks/baremetal_prepare.yml
    
    - name: Check if the new node was defined
      shell: >
        ironic
        --os-auth-token="{{ baremetal_ironic_token }}"
        --ironic-url="{{ baremetal_server_ironic_api }}"
        node-list | awk -F '|' "/ {{ baremetal_name }} /{ print \$2 }"
      register: __baremetal_new
      ignore_errors: yes
      delegate_to: "{{ baremetal_client }}"

    - name: Define the new baremetal node
      shell: >
        ironic
        --os-auth-token="{{ baremetal_ironic_token }}"
        --ironic-url="{{ baremetal_server_ironic_api }}"
        node-create -n "{{ baremetal_name }}" -d "{{ baremetal_driver }}"
        -i virtualbox_host="{{ baremetal_ipmi_ip }}"
        -i virtualbox_vmname="{{ baremetal_name }}"
        -i deploy_kernel="{{ baremetal_deploy_kernel }}"
        -i deploy_ramdisk="{{ baremetal_deploy_ramdisk }}"
        | awk "/ uuid /{ print \$4 }"
      register: __baremetal_defined
      delegate_to: "{{ baremetal_client }}"
      when: __baremetal_new.stdout|trim == ''

    - name: Get the new server UUID 
      set_fact: baremetal_uuid="{{ __baremetal_defined.stdout | trim }}"
      when: __baremetal_new.stdout|trim == ''

    - name: Get the current server UUID
      set_fact: baremetal_uuid="{{ __baremetal_new.stdout | trim }}"
      when: __baremetal_new.stdout|trim != ''


  roles:
    - role: configdrive
      when: baremetal_configdrive


  tasks:
    - name: Define the install image for the node
      command: > 
        ironic 
        --os-auth-token="{{ baremetal_ironic_token }}" 
        --ironic-url="{{ baremetal_server_ironic_api }}"
        node-update "{{ baremetal_uuid }}" add
            instance_info/image_source="{{ baremetal_image }}"
            instance_info/image_checksum="{{ baremetal_image_checksum }}"
            extra/deploy_date="{{ ansible_date_time.iso8601 }}"
            extra/deploy_host="{{ ansible_hostname }}"
            extra/deploy_user="{{ ansible_user }}"
      delegate_to: "{{ baremetal_client }}"
      
    - name: Define the kernel and ramdisk for the image
      command: >
        ironic 
        --os-auth-token="{{ baremetal_ironic_token }}"
        --ironic-url="{{ baremetal_server_ironic_api }}"
        node-update "{{ baremetal_uuid }}" add
            instance_info/kernel="{{ baremetal_image_kernel }}"
            instance_info/ramdisk="{{ baremetal_image_ramdisk }}"
            instance_info/root_gb="{{ baremetal_image_rootsize }}"
      when: baremetal_image_kernel and baremetal_image_ramdisk
      delegate_to: "{{ baremetal_client }}"

    - name: Create the MAC address ports for the new node
      command: > 
        ironic 
        --os-auth-token="{{ baremetal_ironic_token }}"
        --ironic-url="{{ baremetal_server_ironic_api }}"
        port-create -n "{{ baremetal_uuid }}" -a "{{ baremetal_mac }}"
      when: baremetal_mac is defined and baremetal_mac and __baremetal_defined|success
      delegate_to: "{{ baremetal_client }}"

    - name: Add reference to config-drive in metadata info
      command: > 
        ironic 
        --os-auth-token="{{ baremetal_ironic_token }}" 
        --ironic-url="{{ baremetal_server_ironic_api }}"
        node-update "{{ baremetal_uuid }}" add
            extra/configdrive="{{ baremetal_configdrive_base_url }}/{{ baremetal_uuid }}"
      when: >
        baremetal_configdrive_base_url is defined and
        not baremetal_configdrive_base_url is none and
        baremetal_configdrive
      delegate_to: "{{ baremetal_client }}"

    - name: Define the configdrive parameter
      set_fact: _baremetal_configdrive_param=""
      delegate_to: "{{ baremetal_client }}"

    - name: Define the configdrive parameter when enabled configdrive
      set_fact: _baremetal_configdrive_param="--config-drive {{ baremetal_configdrive_base_url }}/{{ baremetal_uuid }}.gz"
      when: baremetal_configdrive
      delegate_to: "{{ baremetal_client }}"

    - name: Active and deploy the server
      command: >
        ironic
        --os-auth-token="{{ baremetal_ironic_token }}"
        --ironic-url="{{ baremetal_server_ironic_api }}"
        node-set-provision-state {{ _baremetal_configdrive_param }} "{{ baremetal_uuid }}" active
      delegate_to: "{{ baremetal_client }}"
      when: deploy | trim == "deploy"

