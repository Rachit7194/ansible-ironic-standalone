---
# Check the length of the MAC, IPMI ip ...
- name: Validate MAC address(es)
  fail:
    msg: "MAC address incorrect!"
  when: item | length != 17
  with_items: "{{ baremetal_macs }}"

# Define the name based on the fqdn
- name: Define the server domain
  set_fact:
    baremetal_domain: "{{ baremetal_fqdn.split('.', 1) | last }}"
  when: not (baremetal_domain is defined and baremetal_domain) and baremetal_fqdn
  
- name: Define the server name
  set_fact:
    baremetal_name: "{{ baremetal_fqdn.split('.') | first }}"
  when: not (baremetal_name is defined and baremetal_name) and baremetal_fqdn

- name: Define the server name as MAC
  set_fact:
    baremetal_name: "{{ baremetal_macs | first | regex_replace(':', '-') }}"
  when: baremetal_macs and not (baremetal_name is defined and baremetal_name)

- name: Define the IPMI web console port for shellinabox
  set_fact:
    baremetal_console_port: "{{ baremetal_ipmi_ip.split('.')[-1]|int + 10000 }}"
  when: baremetal_ipmi_ip and not (baremetal_console_port is defined and baremetal_console_port)


# Ironic checks
- block:

  - name: Check if the node is defined in Ironic
    shell: >
      ironic
      --os-auth-token="{{ Ironic_api_token }}"
      --ironic-url="{{ Ironic_api_public_url }}"
      node-list | awk -F '|' "/ {{ baremetal_name }} /{ print \$2 }"
    register: __baremetal_new
    ignore_errors: yes
    delegate_to: "{{ groups.client[0] }}"

  - name: Define the new baremetal node in Ironic
    shell: >
      ironic
      --os-auth-token="{{ Ironic_api_token }}"
      --ironic-url="{{ Ironic_api_public_url }}"
      node-create -n "{{ baremetal_name }}" -d "{{ baremetal_driver }}"
      -i virtualbox_host="{{ baremetal_ipmi_ip }}"
      -i virtualbox_vmname="{{ baremetal_name }}"
      -i deploy_kernel="{{ baremetal_deploy_kernel }}"
      -i deploy_ramdisk="{{ baremetal_deploy_ramdisk }}"
      | awk "/ uuid /{ print \$4 }"
    register: __baremetal_defined
    delegate_to: "{{ groups.client[0] }}"
    when: __baremetal_new.stdout | trim == ''
    run_once: yes

  - name: Get Ironic UUID
    set_fact:
      baremetal_uuid: "{{ (__baremetal_new.stdout | trim == '') | ternary(__baremetal_defined.stdout, __baremetal_new.stdout) | trim }}"

  - name: Define the MAC address ports in Ironic
    command: > 
      ironic 
      --os-auth-token="{{ Ironic_api_token }}"
      --ironic-url="{{ Ironic_api_public_url }}"
      port-create -n "{{ baremetal_uuid }}" -a "{{ item }}"
    with_items: "{{ baremetal_macs }}"
    when: baremetal_macs and __baremetal_new.stdout | trim == ''
    delegate_to: "{{ groups.client[0] }}"
    run_once: yes

  when: _baremetal_create is defined and baremetal_create

