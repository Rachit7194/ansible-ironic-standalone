---
# Calculate the MD5 checksum for the image
# If checksum is not defined, it does those things, it will try to load a file 
# with the checksum next to the baremetal_image, but with the '.meta' extension.
# if it does not found such file, it will workout the md5 checksum.
############################################################################

- name: Define the MD5 checksum URI if needed
  set_fact: _baremetal_image_checksum_path="{{ baremetal_image | regex_replace('^(.*)\.(.*)$', '\\1.meta') }}"

- name: Get the url image MD5 checksum
  command: curl -qs -f "{{ _baremetal_image_checksum_path }}"
  register: _baremetal_image_checksum
  ignore_errors: yes
  when: baremetal_image | search("http://.*")

# The MD5 has to be in the first line, first word
- name: Load the previous MD5 checksum
  set_fact: baremetal_image_checksum="{{ _baremetal_image_checksum.stdout_lines[0].split() | first }}"
  when: _baremetal_image_checksum|success

- name: Workout the checksum with the image url
  shell: set -o pipefail && curl -qs -f "{{ baremetal_image }}" | md5sum
  args:
    executable: /bin/bash
  register: _baremetal_image_checksum
  ignore_errors: yes
  when: >
    baremetal_image | search("http://.*") and
    not _baremetal_image_checksum|success

- name: Load the previous MD5 checksum
  set_fact: baremetal_image_checksum="{{ _baremetal_image_checksum.stdout_lines[0].split() | first }}"
  when: _baremetal_image_checksum|success

- name: Check MD5 image checksum is defined
  fail: msg="MD5 image checksum not defined. Check if the image exists on the repository"
  when: not _baremetal_image_checksum|success

