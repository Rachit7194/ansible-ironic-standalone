---
nginx_server_list:
  - name: "{{ ansible_hostname }}"
    root: "{{ baremetal_server_http_root_path }}"
    client_body_temp_path: "{{ baremetal_server_http_root_path }}/tmp"
    access_log: "/var/log/nginx/{{ ansible_hostname }}-server_access.log"
    location_list:
      - name: "/"
        autoindex: "on"
      - name: "/images/"
        autoindex: "on"
        client_body_buffer_size: "16k" 
        client_max_body_size: "50G"
        create_full_put_path: "on"
        dav_access: "user:rw group:rw all:r"
        dav_methods: "PUT DELETE MKCOL COPY MOVE"
        default_type: "application/octet-stream"
      - name: "/metadata/"
        autoindex: "on"
        client_body_buffer_size: "16k" 
        client_max_body_size: "100M"
        create_full_put_path: "on"
        dav_access: "user:rw group:rw all:r"
        dav_methods: "PUT DELETE MKCOL COPY MOVE"
        default_type: "application/octet-stream"
      - name: "/deploy/"
        autoindex: "on"
        client_body_buffer_size: "16k" 
        client_max_body_size: "100M"
        create_full_put_path: "on"
        dav_access: "user:rw group:rw all:r"
        dav_methods: "PUT DELETE MKCOL COPY MOVE"
        default_type: "application/octet-stream"

# For ironic_webclient
webclient_webdir_owner: "{{ nginx_user }}"
webclient_webdir_group: "{{ ironic_group }}"


# Inspector
ironic_inspector_ipa_tftproot: "{{ ironic_pxe_tftp_root }}"
ironic_inspector_ipa_images_path: "{{ ironic_pxe_images_path }}"
ironic_inspector_ipa_callback_url: "http://{{ ironic_pxe_tftp_server }}:{{ ironic_inspector_listen_port }}/v1/continue"


monit_monitoring_list:
  - name: ironic-conductor
    target: "{{ ironic_conductor_pidfile }}"
    script: "/usr/sbin/service ironic-conductor %"
    rules:
      - "if 3 restarts within 3 cycles then timeout"
  - name: ironic-inspector
    target: "{{ ironic_inspector_pidfile }}"
    script: "/usr/sbin/service ironic-inspector %"
    rules:
      - "if 3 restarts within 3 cycles then timeout"
  - name: dnsmasq
    target: "{{ dnsmasq_pidfile }}"
    script: "/usr/sbin/service dnsmasq %"
    rules:
      - "if failed port 53 type tcp protocol dns then restart"
      - "if 3 restarts within 3 cycles then timeout"
  - name: nginx
    target: "{{ nginx_pidfile }}"
    script: "/usr/sbin/service nginx %"
    rules:
      - "if failed port 80 type tcp then restart"
      - "if 3 restarts within 3 cycles then timeout" 
